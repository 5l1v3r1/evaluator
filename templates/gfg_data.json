{"https://www.geeksforgeeks.org/array/": "An array is a collection of items stored at contiguous memory locations. The idea is to store multiple items of the same type together. This makes it easier to calculate the position of each element by simply adding an offset to a base value, i.e., the memory location of the first element of the array (generally denoted by the name of the array).", "https://www.geeksforgeeks.org/data-structures/linked-list/": "A linked list is a linear data structure, in which the elements are not stored at contiguous memory locations. The elements in a linked list are linked using pointers as shown in the below image:", "https://www.geeksforgeeks.org/stack/": "Stack is a linear data structure which follows a particular order in which the operations are performed. The order may be LIFO(Last In First Out) or FILO(First In Last Out).", "https://www.geeksforgeeks.org/queue/": "A Queue is a linear structure which follows a particular order in which the operations are performed. The order is First In First Out (FIFO).  A good example of a queue is any queue of consumers for a resource where the consumer that came first is served first. The difference between ", "https://www.geeksforgeeks.org/binary-tree-2/": "A tree whose elements have at most 2 children is called a binary tree. Since each element in a binary tree can have only 2 children, we typically name them the left and right child.", "https://www.geeksforgeeks.org/binary-search-tree/": " is a node-based binary tree data structure which has the following properties:", "https://www.geeksforgeeks.org/heap/": "A Heap is a special Tree-based data structure in which the tree is a complete binary tree. Generally, Heaps can be of two types:", "https://www.geeksforgeeks.org/hashing/": "Hashing is an important Data Structure which is designed to use a special function called the Hash function which is used to map a given value with a particular key for faster access of elements. The efficiency of mapping depends of the efficiency of the hash function used.", "https://www.geeksforgeeks.org/graph-data-structure-and-algorithms/": "A Graph is a non-linear data structure consisting of nodes and edges. The nodes are sometimes also referred to as vertices and the edges are lines or arcs that connect any two nodes in the graph. More formally a Graph can be defined as, ", "https://www.geeksforgeeks.org/matrix/": "A matrix represents a collection of numbers arranged in an order of rows and columns. It is necessary to enclose the elements of a matrix in parentheses or brackets.", "https://www.geeksforgeeks.org/overview-of-data-structures-set-1-linear-data-structures/": "A data structure is a particular way of organizing data in a computer so that it can be used effectively. The idea is to reduce the space and time complexities of different tasks.  Below is an overview of some popular linear data structures.", "https://www.geeksforgeeks.org/overview-of-data-structures-set-2-binary-tree-bst-heap-and-hash/": "We have discussed ", "https://www.geeksforgeeks.org/overview-of-data-structures-set-3-graph-trie-segment-tree-and-suffix-tree/": "We have discussed below data structures in previous two sets.", "https://www.geeksforgeeks.org/abstract-data-types/": "Abstract Data type (ADT) is a type (or class) for objects whose behavior is defined by a set of value and a set of operations.", "https://www.geeksforgeeks.org/linked-list-vs-array/": "Both ", "https://www.geeksforgeeks.org/how-to-write-functions-that-modify-the-head-pointer-of-a-linked-list/": "Consider simple representation (without any dummy node) of Linked List. Functions that operate on such Linked lists can be divided in two categories:", "https://www.geeksforgeeks.org/swap-nodes-in-a-linked-list-without-swapping-data/": "Given a linked list and two keys in it, swap nodes for two given keys. Nodes should be swapped by changing links.  Swapping data of nodes may be expensive in many situations when data contains many fields. ", "https://www.geeksforgeeks.org/write-a-function-to-reverse-the-nodes-of-a-linked-list/": "Given pointer to the head node of a linked list, the task is to reverse the linked list.  We need to reverse the list by changing links between nodes.", "https://www.geeksforgeeks.org/merge-two-sorted-linked-lists/": "Write a SortedMerge() function that takes two lists, each of which is sorted in increasing order, and merges the two together into one list which is in increasing order. SortedMerge() should return the new list.", "https://www.geeksforgeeks.org/merge-sort-for-linked-list/": " is often preferred for sorting a linked list. The slow random-access performance of a linked list makes some other algorithms (such as quicksort) perform poorly, and others (such as heapsort) completely impossible.", "https://www.geeksforgeeks.org/reverse-a-list-in-groups-of-given-size/": "Given a linked list, write a function to reverse every k nodes (where k is an input to the function). ", "https://www.geeksforgeeks.org/detect-and-remove-loop-in-a-linked-list/": "Write a function ", "https://www.geeksforgeeks.org/add-two-numbers-represented-by-linked-lists/": "Given two numbers represented by two lists, write a function that returns sum list. The sum list is list representation of addition of two input numbers.", "https://www.geeksforgeeks.org/rotate-a-linked-list/": "Given a singly linked list, rotate the linked list counter-clockwise by k nodes. Where k is a given positive integer.", "https://www.geeksforgeeks.org/generic-linked-list-in-c-2/": "Unlike ", "https://www.geeksforgeeks.org/circular-singly-linked-list-insertion/": "We have discussed Singly and Circular Linked List in the following post:", "https://www.geeksforgeeks.org/split-a-circular-linked-list-into-two-halves/": null, "https://www.geeksforgeeks.org/sorted-insert-for-circular-linked-list/": "Rookie", "https://www.geeksforgeeks.org/delete-a-node-in-a-doubly-linked-list/": null, "https://www.geeksforgeeks.org/reverse-a-doubly-linked-list/": "Write a C function to reverse a given Doubly Linked List", "https://www.geeksforgeeks.org/the-great-tree-list-recursion-problem/": "Asked by Varun Bhatia.", "https://www.geeksforgeeks.org/quicksort-for-linked-list/": "Following is a typical recursive implementation of ", "https://www.geeksforgeeks.org/merge-sort-for-doubly-linked-list/": "Given a doubly linked list, write a function to sort the doubly linked list in increasing order using merge sort.", "https://www.geeksforgeeks.org/implement-two-stacks-in-an-array/": "Create a data structure ", "https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/": "Given an expression string exp , write a program to examine whether the pairs and the orders of \u201c{\u201c,\u201d}\u201d,\u201d(\u201c,\u201d)\u201d,\u201d[\u201c,\u201d]\u201d are correct in exp. ", "https://www.geeksforgeeks.org/next-greater-element/": "Given an array, print the Next Greater Element (NGE) for every element. The Next greater Element for an element x is the first greater element on the right side of x in array. ", "https://www.geeksforgeeks.org/reverse-a-stack-using-recursion/": "Write a program to reverse a stack using recursion. You are not allowed to use loop constructs like while, for..etc, and you can only use the following ADT functions on Stack S:", "https://www.geeksforgeeks.org/sort-a-stack-using-recursion/": "Given a stack, sort it using recursion. Use of any loop constructs like while, for..etc is not allowed. We can only use the following ADT functions on Stack S: ", "https://www.geeksforgeeks.org/the-stock-span-problem/": " is a financial problem where we have a series of n daily price quotes for a stock and we need to calculate span of stock\u2019s price for all n days. ", "https://www.geeksforgeeks.org/design-and-implement-special-stack-data-structure/": " Design a Data Structure SpecialStack that supports all the stack operations like push(), pop(), isEmpty(), isFull() and an additional operation getMin() ", "https://www.geeksforgeeks.org/implement-stack-using-queue/": "The problem is opposite of ", "https://www.geeksforgeeks.org/design-a-stack-with-find-middle-operation/": "How to implement a stack which will support following operations in", "https://www.geeksforgeeks.org/efficiently-implement-k-stacks-single-array/": "We have discussed ", "https://www.geeksforgeeks.org/applications-of-queue-data-structure/": " is used when things don\u2019t have to be processed immediately, but have to be processed in ", "https://www.geeksforgeeks.org/implementation-deque-using-circular-array/": " is a generalized version of ", "https://www.geeksforgeeks.org/queue-using-stacks/": "The problem is opposite of ", "https://www.geeksforgeeks.org/find-a-tour-that-visits-all-stations/": "Suppose there is a circle. There are n petrol pumps on that circle. You are given two sets of data.", "https://www.geeksforgeeks.org/maximum-of-all-subarrays-of-size-k/": "Given an array and an integer k, find the maximum for each and every contiguous subarray of size k.", "https://www.geeksforgeeks.org/interesting-method-generate-binary-numbers-1-n/": "Given a number n, write a function that generates and prints all binary numbers with decimal values from 1 to n.  ", "https://www.geeksforgeeks.org/efficiently-implement-k-queues-single-array/": "We have discussed ", "https://www.geeksforgeeks.org/handshaking-lemma-and-interesting-tree-properties/": " is about undirected graph. In every finite undirected graph number of vertices with odd degree is always even. ", "https://www.geeksforgeeks.org/applications-of-tree-data-structure/": "\nUnlike Array and Linked List, which are linear data structures, tree is hierarchical (or non-linear) data structure. ", "https://www.geeksforgeeks.org/618/": "Unlike linear data structures (Array, Linked List, Queues, Stacks, etc) which have only one logical way to traverse them, trees can be traversed in different ways. Following are the generally used ways for traversing trees.", "https://www.geeksforgeeks.org/bfs-vs-dfs-binary-tree/": "\nA Tree is typically traversed in two ways:", "https://www.geeksforgeeks.org/level-order-tree-traversal/": "Level order traversal of a tree is ", "https://www.geeksforgeeks.org/diameter-of-a-binary-tree/": "The diameter of a tree (sometimes called the width) is the number of nodes on the longest path between two end nodes.  ", "https://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion/": "Using ", "https://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion-and-without-stack/": "Using Morris Traversal, we can traverse the tree without using stack and recursion. The idea of Morris Traversal is based on ", "https://www.geeksforgeeks.org/write-a-c-program-to-find-the-maximum-depth-or-height-of-a-tree/": "Given a binary tree, find height of it. Height of empty tree is 0 and height of below tree is 3.", "https://www.geeksforgeeks.org/if-you-are-given-two-traversal-sequences-can-you-construct-the-binary-tree/": "It depends on what traversals are given.  If one of the traversal methods is Inorder then the tree can be  constructed, otherwise not.", "https://www.geeksforgeeks.org/clone-binary-tree-random-pointers/": "Given a Binary Tree where every node has following structure.", "https://www.geeksforgeeks.org/construct-tree-from-given-inorder-and-preorder-traversal/": "Let us consider the below traversals:", "https://www.geeksforgeeks.org/maximum-width-of-a-binary-tree/": "Given a binary tree, write a function to get the maximum width of the given tree. Width of a tree is maximum of widths of all levels.  ", "https://www.geeksforgeeks.org/print-nodes-at-k-distance-from-root/": "Given a root of a tree, and an integer k. Print all the nodes which are at k distance from root. ", "https://www.geeksforgeeks.org/print-ancestors-of-a-given-node-in-binary-tree/": "Given a Binary Tree and a key, write a function that prints all the ancestors of the key in the given binary tree. ", "https://www.geeksforgeeks.org/check-if-a-binary-tree-is-subtree-of-another-binary-tree/": "Given two binary trees, check if the first tree is subtree of the second one.", "https://www.geeksforgeeks.org/connect-nodes-at-same-level/": "Write a function to connect all the adjacent nodes at the same level in a binary tree. Structure of the given Binary Tree node is like following. ", "https://www.geeksforgeeks.org/find-the-minimum-element-in-a-binary-search-tree/": "This is quite simple.  Just traverse the node from root to left recursively until left is NULL. The node whose left is NULL is the node with minimum value. ", "https://www.geeksforgeeks.org/inorder-predecessor-successor-given-key-bst/": "I recently encountered with a question in an interview at e-commerce company.  The interviewer asked the following question:", "https://www.geeksforgeeks.org/a-program-to-check-if-a-binary-tree-is-bst-or-not/": "A binary search tree (BST) is a node based binary tree data structure which has the following properties.", "https://www.geeksforgeeks.org/lowest-common-ancestor-in-a-binary-search-tree/": "Given values of two values n1 and n2 in a Binary Search Tree, find the ", "https://www.geeksforgeeks.org/inorder-successor-in-binary-search-tree/": "In Binary Tree, Inorder successor of a node is the next node in Inorder traversal of the Binary Tree. Inorder Successor is NULL for the last node in Inoorder traversal.", "https://www.geeksforgeeks.org/find-k-th-smallest-element-in-bst-order-statistics-in-bst/": "Given root of binary search tree and K as input, find K-th smallest element in BST. ", "https://www.geeksforgeeks.org/merge-two-bsts-with-limited-extra-space/": "Given two Binary Search Trees(BST), print the elements of both BSTs in sorted form. The expected time complexity is O(m+n) ", "https://www.geeksforgeeks.org/fix-two-swapped-nodes-of-bst/": "Two of the nodes of a Binary Search Tree (BST) are swapped. Fix (or correct) the BST. ", "https://www.geeksforgeeks.org/floor-and-ceil-from-a-bst/": "There are numerous applications we need to find floor (ceil) value of a key in a binary search tree or sorted array. ", "https://www.geeksforgeeks.org/in-place-conversion-of-sorted-dll-to-balanced-bst/": "Given a Doubly Linked List which has data members sorted in ascending order. Construct a ", "https://www.geeksforgeeks.org/find-a-pair-with-given-sum-in-bst/": "Given a Balanced Binary Search Tree and a target sum, write a function that returns true if there is a pair with sum equals to target sum, otherwise return false. ", "https://www.geeksforgeeks.org/total-number-of-possible-binary-search-trees-with-n-keys/": "Total number of possible Binary Search Trees with n different keys (countBST(n)) = ", "https://www.geeksforgeeks.org/merge-two-balanced-binary-search-trees/": "You are given two balanced binary search trees e.g., AVL or Red Black Tree. Write a function that merges the two given balanced BSTs into a balanced binary search tree. ", "https://www.geeksforgeeks.org/binary-tree-to-binary-search-tree-conversion/": "Given a Binary Tree, convert it to a Binary Search Tree. The conversion must be done in such a way that keeps the original structure of Binary Tree. ", "https://www.geeksforgeeks.org/why-is-binary-heap-preferred-over-bst-for-priority-queue/": "A typical ", "https://www.geeksforgeeks.org/binomial-heap-2/": "The main application of ", "https://www.geeksforgeeks.org/fibonacci-heap-set-1-introduction/": "Heaps are mainly used for implementing priority queue. We have discussed below heaps in previous posts.", "https://www.geeksforgeeks.org/k-largestor-smallest-elements-in-an-array/": "Write an efficient program for printing k largest elements in an array. Elements in array can be in any order.", "https://www.geeksforgeeks.org/nearly-sorted-algorithm/": "Given an array of n elements, where each element is at most k away from its target position, devise an algorithm that sorts in O(n log k) time.  For example, let us consider k is 2, an element at index 7 in the sorted array, can be at indexes 5, 6, 7, 8, 9 in the given array.", "https://www.geeksforgeeks.org/tournament-tree-and-binary-heap/": "Given a team of N players. How many minimum games are required to find second best player? ", "https://www.geeksforgeeks.org/print-binary-tree-vertical-order-set-2/": "Given a binary tree, print it vertically. The following example illustrates vertical order traversal.", "https://www.geeksforgeeks.org/find-whether-an-array-is-subset-of-another-array-set-1/": "Given two arrays: arr1[0..m-1] and arr2[0..n-1]. Find whether arr2[] is a subset of arr1[] or not. Both the arrays are not in sorted order. It may be assumed that elements in both array are distinct.", "https://www.geeksforgeeks.org/union-and-intersection-of-two-linked-lists/": "Given two Linked Lists, create union and intersection lists that contain union and intersection of the elements present in the given lists. Order of elments in output lists doesn\u2019t matter.", "https://www.geeksforgeeks.org/write-a-c-program-that-given-a-set-a-of-n-numbers-and-another-number-x-determines-whether-or-not-there-exist-two-elements-in-s-whose-sum-is-exactly-x/": "Write a program that, given an array A[] of n numbers and another number x, determines whether or not there exist two elements in S whose sum is exactly x. ", "https://www.geeksforgeeks.org/check-given-array-contains-duplicate-elements-within-k-distance/": "Given an unsorted array that may contain duplicates. Also given a number k which is smaller than size of array.  Write a function that returns true if array contains duplicates within k distance.", "https://www.geeksforgeeks.org/find-itinerary-from-a-given-list-of-tickets/": "Given a list of tickets, find itinerary in order using the given list.", "https://www.geeksforgeeks.org/find-number-of-employees-under-every-manager/": "Given a dictionary that contains mapping of employee and his manager as a number of (employee, manager) pairs like below. ", "https://www.geeksforgeeks.org/graph-and-its-representations/": "Graph is a data structure that consists of following two components:", "https://www.geeksforgeeks.org/breadth-first-traversal-for-a-graph/": " for a graph is similar to Breadth First Traversal of a tree (See method 2 of ", "https://www.geeksforgeeks.org/depth-first-traversal-for-a-graph/": " for a graph is similar to ", "https://www.geeksforgeeks.org/applications-of-depth-first-search/": "Depth-first search (DFS) is an algorithm (or technique) for traversing a graph. ", "https://www.geeksforgeeks.org/applications-of-breadth-first-traversal/": "We have earlier discussed ", "https://www.geeksforgeeks.org/detect-cycle-in-a-graph/": "Given a directed graph, check whether the graph contains a cycle or not.  Your function should return true if the given graph contains at least one cycle, else return false.", "https://www.geeksforgeeks.org/union-find/": "A ", "https://www.geeksforgeeks.org/detect-cycle-undirected-graph/": "\nGiven an undirected graph, how to check if there is a cycle in the graph? For example, the following graph has a cycle 1-0-2-1.", "https://www.geeksforgeeks.org/find-longest-path-directed-acyclic-graph/": "Given a Weighted ", "https://www.geeksforgeeks.org/topological-sorting/": "Topological sorting for Directed Acyclic Graph (DAG) is a linear ordering of vertices such that for every directed edge uv,  vertex u comes before v in the ordering. ", "https://www.geeksforgeeks.org/bipartite-graph/": "A ", "https://www.geeksforgeeks.org/snake-ladder-problem-2/": "Given a snake and ladder board, find the minimum number of dice throws required to reach the destination or last cell from source or 1st cell.", "https://www.geeksforgeeks.org/minimize-cash-flow-among-given-set-friends-borrowed-money/": "Given a number of friends who have to give or take some amount of money from one another. Design an algorithm by which the total cash flow among all the friends is minimized. ", "https://www.geeksforgeeks.org/boggle-find-possible-words-board-characters/": "Given a dictionary, a method to do lookup in dictionary and a M x N board where every cell has one character. Find all possible words that can be formed by a sequence of adjacent characters. Note that we can move to any of 8 adjacent characters, but a word should not have multiple instances of same cell.", "https://www.geeksforgeeks.org/assign-directions-to-edges-so-that-the-directed-graph-remains-acyclic/": "Given a graph with both directed and undirected edges. It is given that the directed edges don\u2019t form cycle.  How to assign directions to undirected edges so that the graph (with all directed edges) remains acyclic even after the assignment?  ", "https://www.geeksforgeeks.org/memory-efficient-doubly-linked-list/": "Asked by Varun Bhatia.", "https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-1/": "An ordinary Doubly Linked List requires space for two address fields to store the addresses of previous and next nodes.", "https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-2/": "In the ", "https://www.geeksforgeeks.org/skip-list/": "\nThe worst case search time for a sorted linked list is O(n) as we can only linearly traverse the list and cannot skip nodes while searching. ", "https://www.geeksforgeeks.org/self-organizing-list-set-1-introduction/": "The worst case search time for a sorted linked list is O(n). With a Balanced Binary Search Tree, we can skip almost half of the nodes after one comparison with root.", "https://www.geeksforgeeks.org/unrolled-linked-list-set-1-introduction/": "Like array and linked list, unrolled Linked List is also a linear data structure and is a variant of linked list. Unlike simple linked list, it stores multiple elements at each node. That is, instead of storing single element at a node, unrolled linked lists store an array of elements at a node. Unrolled linked list covers advantages of both array and linked list as it reduces the memory overhead in comparison to simple linked lists by storing multiple elements at each node and it also has the advantage of fast insertion and deletion as that of a linked list.", "https://www.geeksforgeeks.org/segment-tree-set-1-sum-of-given-range/": "Let us consider the following problem to understand Segment Trees.", "https://www.geeksforgeeks.org/segment-tree-set-1-range-minimum-query/": "We have introduced ", "https://www.geeksforgeeks.org/lazy-propagation-in-segment-tree/": "Segment tree is introduced in  ", "https://www.geeksforgeeks.org/persistent-segment-tree-set-1-introduction/": "Segment Tree is itself a great data structure that comes into play in many cases. In this post we will introduce the concept of Persistency in this data structure. Persistency, simply means to retain the changes. But obviously, retaining the changes cause extra memory consumption and hence affect the Time Complexity.", "https://www.geeksforgeeks.org/trie-insert-and-search/": " is an efficient information re", "https://www.geeksforgeeks.org/trie-delete/": "In the ", "https://www.geeksforgeeks.org/longest-prefix-matching-a-trie-based-solution-in-java/": "Given a dictionary of words and an input string, find the longest prefix of the string which is also a word in dictionary.", "https://www.geeksforgeeks.org/print-unique-rows/": "Given a binary matrix, print all unique rows of the given matrix. ", "https://www.geeksforgeeks.org/implement-reverse-dns-look-cache/": "Reverse DNS look up is using an internet IP address to find a domain name.  For example, if you type 74.125.200.106 in browser, it automatically redirects to google.in. ", "https://www.geeksforgeeks.org/implement-forward-dns-look-cache/": "We have discussed ", "https://www.geeksforgeeks.org/binary-indexed-tree-or-fenwick-tree-2/": "Let us consider the following problem to understand Binary Indexed Tree.", "https://www.geeksforgeeks.org/two-dimensional-binary-indexed-tree-or-fenwick-tree/": "Prerequisite \u2013 ", "https://www.geeksforgeeks.org/binary-indexed-tree-range-updates-point-queries/": "Given an array arr[0..n-1]. The following operations need to be performed. ", "https://www.geeksforgeeks.org/binary-indexed-tree-range-update-range-queries/": "Given an array arr[0..n-1]. The following operations need to be performed. ", "https://www.geeksforgeeks.org/suffix-array-set-1-introduction/": "We strongly recommend to read following post on suffix trees as a pre-requisite for this post.", "https://www.geeksforgeeks.org/suffix-array-set-2-a-nlognlogn-algorithm/": "more", "https://www.geeksforgeeks.org/%c2%ad%c2%adkasais-algorithm-for-construction-of-lcp-array-from-suffix-array/": null, "https://www.geeksforgeeks.org/pattern-searching-set-8-suffix-tree-introduction/": "Given a text txt[0..n-1] and a pattern pat[0..m-1], write a function search(char pat[], char txt[]) that prints all occurrences of pat[] in txt[]. You may assume that n > m.", "https://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-1/": "Suffix Tree is very useful in numerous string processing and computational biology problems.", "https://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-2/": "In ", "https://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-3/": "This article is continuation of following two articles:", "https://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-4/": "This article is continuation of following three articles:", "https://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-5/": "This article is continuation of following four articles:", "https://www.geeksforgeeks.org/ukkonens-suffix-tree-construction-part-6/": "This article is continuation of following five articles:", "https://www.geeksforgeeks.org/generalized-suffix-tree-1/": "In earlier suffix tree articles, we created suffix tree for one string and then we queried that tree for ", "https://www.geeksforgeeks.org/suffix-tree-application-4-build-linear-time-suffix-array/": "Given a string, build it\u2019s ", "https://www.geeksforgeeks.org/suffix-tree-application-1-substring-check/": "Given a text string and a pattern string, check if a pattern exists in text or not.", "https://www.geeksforgeeks.org/suffix-tree-application-2-searching-all-patterns/": "Given a text string and a pattern string, find all occurrences of the pattern in string.", "https://www.geeksforgeeks.org/suffix-tree-application-3-longest-repeated-substring/": "Given a text string, find ", "https://www.geeksforgeeks.org/suffix-tree-application-6-longest-palindromic-substring/": "Given a string, find the longest substring which is palindrome.", "https://www.geeksforgeeks.org/avl-tree-set-1-insertion/": "AVL tree is a self-balancing Binary Search Tree (BST) where the difference between heights of left and right subtrees cannot be more than one for all nodes.", "https://www.geeksforgeeks.org/avl-tree-set-2-deletion/": "We have discussed AVL insertion in the ", "https://www.geeksforgeeks.org/splay-tree-set-1-insert/": "The worst case time complexity of Binary Search Tree (BST) operations like search, delete, insert is O(n). The worst case occurs when the tree is skewed. We can get the worst case time complexity as O(Logn) with ", "https://www.geeksforgeeks.org/splay-tree-set-2-insert-delete/": "It is recommended to refer following post as prerequisite of this post.", "https://www.geeksforgeeks.org/b-tree-set-1-introduction-2/": "B-Tree is a self-balancing search tree. In most of the other self-balancing search trees (like ", "https://www.geeksforgeeks.org/b-tree-set-1-insert-2/": "In the ", "https://www.geeksforgeeks.org/b-tree-set-3delete/": "It is recommended to refer following posts as prerequisite of this post.", "https://www.geeksforgeeks.org/red-black-tree-set-1-introduction-2/": "Red-Black Tree is a self-balancing Binary Search Tree (BST) where every node follows following rules.", "https://www.geeksforgeeks.org/red-black-tree-set-2-insert/": "In the ", "https://www.geeksforgeeks.org/red-black-tree-set-3-delete-2/": "We have discussed following topics on Red-Black tree in previous posts. We strongly recommend to refer following post as prerequisite of this post.", "https://www.geeksforgeeks.org/k-dimensional-tree/": "A K-D Tree(also called as K-Dimensional Tree) is a binary search tree where data in each node is a K-Dimensional point in space. ", "https://www.geeksforgeeks.org/k-dimensional-tree-set-2-find-minimum/": "We strongly recommend to refer below post as a prerequisite of this.", "https://www.geeksforgeeks.org/k-dimensional-tree-set-3-delete/": "We strongly recommend to refer below posts as a prerequisite of this.", "https://www.geeksforgeeks.org/treap-a-randomized-binary-search-tree/": "Like ", "https://www.geeksforgeeks.org/ternary-search-tree/": "A ternary search tree is a special trie data structure where the child nodes of a standard trie are ordered as a binary search tree. ", "https://www.geeksforgeeks.org/interval-tree/": "Consider a situation where we have a set of intervals and we need following operations to be implemented efficiently.  ", "https://www.geeksforgeeks.org/implement-lru-cache/": "\nWe are given total possible page numbers that can be referred. We are also given cache (or memory) size (Number of page frames that cache can hold at a time). The LRU caching scheme is to remove the least recently used frame when the cache is full and a new page is referenced which is not there in cache. Please see the Galvin book for more details (see the LRU page replacement slide ", "https://www.geeksforgeeks.org/sort-numbers-stored-on-different-machines/": "Given N machines. Each machine contains some numbers in sorted form. But the amount of numbers, each machine has is not fixed. Output the numbers from all the machine in sorted non-decreasing form.", "https://www.geeksforgeeks.org/find-the-k-most-frequent-words-from-a-file/": "Given a book of words. Assume you have enough main memory to accommodate all words. design a data structure to find top K maximum occurring words. The data structure should be dynamic so that new words can be added. ", "https://www.geeksforgeeks.org/given-a-sequence-of-words-print-all-anagrams-together-set-2/": "Given an array of words, print all anagrams together. For example, if the given array is {\u201ccat\u201d, \u201cdog\u201d, \u201ctac\u201d, \u201cgod\u201d, \u201cact\u201d}, then output may be \u201ccat tac act dog god\u201d.", "https://www.geeksforgeeks.org/decision-trees-fake-coin-puzzle/": "Let us solve the classic \u201cfake coin\u201d puzzle using decision trees.", "https://www.geeksforgeeks.org/g-fact-87/": "\nA spaghetti stack is an N-ary tree data structure in which child nodes have pointers to the parent nodes (but not vice-versa)", "https://www.geeksforgeeks.org/data-structure-dictionary-spell-checker/": "more", "https://www.geeksforgeeks.org/cartesian-tree/": "A\u00a0Cartesian\u00a0tree\u00a0is\u00a0a\u00a0tree\u00a0data structure created\u00a0from\u00a0a\u00a0set\u00a0of\u00a0data\u00a0that\u00a0obeys\u00a0the \u00a0following\u00a0structural\u00a0invariants:", "https://www.geeksforgeeks.org/cartesian-tree-sorting/": "Prerequisites : ", "https://www.geeksforgeeks.org/sparse-set/": "How to do the following operations efficiently if there are large number of queries for them. ", "https://www.geeksforgeeks.org/centroid-decomposition-of-tree/": null, "https://www.geeksforgeeks.org/gomory-hu-tree-introduction/": "\nIn a flow network, an s-t cut is a cut that requires the source \u2018s\u2019 and the sink \u2018t\u2019 to be in different subsets, and it consists of edges going from the source\u2019s side to the sink\u2019s side. The capacity of an s-t cut is defined by the sum of capacity of each edge in the cut-set. (Source: ", "https://www.geeksforgeeks.org/search-insert-and-delete-in-an-unsorted-array/": "In this post search, insert and delete operation in an unsorted array is discussed.", "https://www.geeksforgeeks.org/search-insert-and-delete-in-a-sorted-array/": "In this post search, insert and delete operation in a sorted array is discussed.", "https://www.geeksforgeeks.org/write-a-program-to-reverse-an-array/": "Given an array (or string), the task is to reverse the array/string.", "https://www.geeksforgeeks.org/leaders-in-an-array/": "Write a program to print all the LEADERS in the array. An element is leader if it is greater than all the elements to its right side.  And the rightmost element is always a leader. For example int the array {16, 17, 4, 3, 5, 2}, leaders are  17, 5 and 2. ", "https://www.geeksforgeeks.org/majority-element/": "Write a function which takes an array and prints the majority element (if it exists), otherwise prints \u201cNo Majority Element\u201d. A ", "https://www.geeksforgeeks.org/find-the-number-occurring-odd-number-of-times/": "Given an array of positive integers. All numbers occur even number of times except one number which occurs odd number of times. Find the number in O(n) time & constant space.", "https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/": "Write an efficient program to find the sum of contiguous subarray within a one-dimensional array of numbers which has the largest sum. ", "https://www.geeksforgeeks.org/find-the-missing-number/": "You are given a list of n-1 integers and these integers are in the range of  1 to n. There are no duplicates in list.  One of the integers is missing in the list. Write an efficient code to find the missing integer.", "https://www.geeksforgeeks.org/search-an-element-in-a-sorted-and-pivoted-array/": "An element in a sorted array can be found in O(log n) time via ", "https://www.geeksforgeeks.org/merge-one-array-of-size-n-into-another-one-of-size-mn/": "There are two sorted arrays. First one is of size m+n containing only m elements. Another one is of size n and contains n elements. Merge these two arrays into the first array of size m+n such that the output is sorted.", "https://www.geeksforgeeks.org/median-of-two-sorted-arrays/": "There are 2 sorted arrays A and B of size n each. Write an algorithm to find the median of the array obtained after merging the above 2 arrays(i.e. array of length 2n). The complexity should be O(log(n)).  ", "https://www.geeksforgeeks.org/array-rotation/": "Write a function rotate(ar[], d, n) that rotates arr[] of size n by d elements.", "https://www.geeksforgeeks.org/program-for-array-rotation-continued-reversal-algorithm/": "Write a function rotate(arr[], d, n) that rotates arr[] of size n by d elements. ", "https://www.geeksforgeeks.org/block-swap-algorithm-for-array-rotation/": "Write a function rotate(ar[], d, n) that rotates arr[] of size n by d elements.", "https://www.geeksforgeeks.org/maximum-sum-such-that-no-two-elements-are-adjacent/": "Given an array of positive numbers, find the maximum sum of a subsequence with the constraint that no 2 numbers in the sequence should be adjacent in the array. So 3 2 7 10 should return 13 (sum of 3 and 10) or 3 2 5 10 7 should return 15 (sum of 3, 5 and 7).Answer the question in most efficient way.", "https://www.geeksforgeeks.org/sort-elements-by-frequency/": "Print the elements of an array in the decreasing frequency if 2 numbers have same frequency then print the one which came first.", "https://www.geeksforgeeks.org/counting-inversions/": "for an array indicates \u2013 how far (or close) the array is from being sorted. If array is already sorted then inversion count is 0. If array is sorted in reverse order that inversion count is the maximum. ", "https://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/": "Given an n x n matrix and a number x, find the position of x in the matrix if it is present in it. Otherwise, print \u201cNot Found\u201d. In the given matrix, every row and column is sorted in increasing order. The designed algorithm should have linear time complexity.  ", "https://www.geeksforgeeks.org/print-a-given-matrix-in-spiral-form/": "Given a 2D array, print it in spiral form. See the following examples.", "https://www.geeksforgeeks.org/a-boolean-matrix-question/": "Given a boolean matrix mat[M][N] of size M X N, modify it such that if a matrix cell mat[i][j] is 1 (or true) then make all the cells of ith row and jth column as 1. ", "https://www.geeksforgeeks.org/maximum-size-sub-matrix-with-all-1s-in-a-binary-matrix/": "Given a binary matrix, find out the maximum size square sub-matrix with all 1s. ", "https://www.geeksforgeeks.org/inplace-m-x-n-size-matrix-transpose/": "About four months of gap (missing GFG), a new post. Given an M x N matrix, transpose the matrix without auxiliary memory.", "https://www.geeksforgeeks.org/dynamic-programming-set-27-max-sum-rectangle-in-a-2d-matrix/": "Given a 2D array, find the maximum sum subarray in it.  For example, in the following 2D array, the maximum sum subarray is highlighted with blue rectangle and sum of this subarray is 29.", "https://www.geeksforgeeks.org/strassens-matrix-multiplication/": "Given two square matrices A and B of size n x n each, find their multiplication matrix.   ", "https://www.geeksforgeeks.org/create-a-matrix-with-alternating-rectangles-of-0-and-x/": "Write a code which inputs two numbers m and n and creates a matrix of size m  x n (m rows and n columns) in which every elements is either X or 0. ", "https://www.geeksforgeeks.org/print-elements-sorted-order-row-column-wise-sorted-matrix/": "Given an n x n matrix, where every row and column is sorted in non-decreasing order.  Print all elements of matrix in sorted order.", "https://www.geeksforgeeks.org/given-n-x-n-square-matrix-find-sum-sub-squares-size-k-x-k/": "Given an n x n square matrix, find sum of all sub-squares of size k x k where k is smaller than or equal to n. ", "https://www.geeksforgeeks.org/count-number-islands-every-island-separated-line/": "Given a rectangular matrix which has only two possible values \u2018X\u2019 and \u2018O\u2019. The values \u2018X\u2019 always appear in form of rectangular islands and these islands are always row-wise and column-wise separated by at least one line of \u2018O\u2019s. ", "https://www.geeksforgeeks.org/find-common-element-rows-row-wise-sorted-matrix/": "Given a matrix where every row is sorted in increasing order. Write a function that finds and returns a common element in all rows. If there is no common element, then returns -1. ", "https://www.geeksforgeeks.org/expression-tree/": "Expression tree is a binary tree in which each internal node corresponds to operator and each leaf node corresponds to operand so for example expression tree for 3 + ((5+9)*2) would be:"}